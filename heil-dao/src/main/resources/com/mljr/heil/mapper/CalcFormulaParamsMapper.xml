<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mljr.heil.mapper.CalcFormulaParamsMapper" >
  <resultMap id="BaseResultMap" type="com.mljr.heil.entity.CalcFormulaParams" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="formula_code" property="formulaCode" jdbcType="VARCHAR" />
    <result column="param_id" property="paramId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, formula_code, param_id, create_time, update_time
  </sql>

  <sql id="queryCondition">
    <where>
      <if test="form != null " >
        <if test="form.formulaCode != null">
          and formula_code = #{form.formulaCode}
        </if>
      </if>
    </where>
  </sql>

  <select id="queryByPage" resultMap="BaseResultMap" parameterType="com.lyqc.base.page.PageForm">
    select
      formula_code as formulaCode, GROUP_CONCAT(param_id) as paramIds
    from pd_calc_formula_params
    <include refid="queryCondition"/>
    group by formula_code
    <if test="paging == true">
      limit #{limit} offset #{start}
    </if>

  </select>

  <select id="queryCount" resultType="int" parameterType="com.lyqc.base.page.PageForm">
    select count(DISTINCT formula_code) from  pd_calc_formula_params
    <include refid="queryCondition"/>
  </select>

  <select id="queryParamIdListByFormulaCode" resultType="int" parameterType="java.util.List">
    select param_id from  pd_calc_formula_params where formula_code = #{formulaCode}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pd_calc_formula_params
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pd_calc_formula_params
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mljr.heil.entity.CalcFormulaParams" >
    insert into pd_calc_formula_params (id, formula_code, param_id, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{formulaCode,jdbcType=VARCHAR}, #{paramId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mljr.heil.entity.CalcFormulaParams" >
    insert into pd_calc_formula_params
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="formulaCode != null" >
        formula_code,
      </if>
      <if test="paramId != null" >
        param_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="formulaCode != null" >
        #{formulaCode,jdbcType=VARCHAR},
      </if>
      <if test="paramId != null" >
        #{paramId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mljr.heil.entity.CalcFormulaParams" >
    update pd_calc_formula_params
    <set >
      <if test="formulaCode != null" >
        formula_code = #{formulaCode,jdbcType=VARCHAR},
      </if>
      <if test="paramId != null" >
        param_id = #{paramId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mljr.heil.entity.CalcFormulaParams" >
    update pd_calc_formula_params
    set formula_code = #{formulaCode,jdbcType=VARCHAR},
      param_id = #{paramId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteByFormulaCode" parameterType="java.lang.String" >
    delete from pd_calc_formula_params
    where formula_code = #{formulaCode,jdbcType=VARCHAR}
  </delete>

  <insert id="batchInsert" parameterType="java.util.List">
    INSERT INTO pd_calc_formula_params(formula_code, param_id) VALUES
    <foreach collection="list" item="item" open="(" close=")" separator="), (">
      #{item.formulaCode}, #{item.paramId}
    </foreach>
  </insert>
</mapper>