<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mljr.heil.mapper.fund.PdFundRuleCensusMapper" >
  <resultMap id="BaseResultMap" type="com.mljr.heil.entity.fund.PdFundRuleCensus" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="fund_rule_id" property="fundRuleId" jdbcType="INTEGER" />
    <result column="province_code" property="provinceCode" jdbcType="VARCHAR" />
    <result column="province_name" property="provinceName" jdbcType="VARCHAR" />
    <result column="city_code" property="cityCode" jdbcType="VARCHAR" />
    <result column="city_name" property="cityName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, fund_rule_id, province_code, province_name, city_code, city_name
  </sql>

  <sql id="queryWhere">
    <where>
      <if test="form != null " >

        <if test="form.fundRuleId != null and form.fundRuleId !=''">
          and fund_rule_id = #{form.fundRuleId}
        </if>
      </if>
    </where>
  </sql>

  <select id="pageQuery" resultMap="BaseResultMap" parameterType="com.lyqc.base.page.PageForm">
    select
    <include refid="Base_Column_List" />
    from pd_fund_rule_census r
    <include refid="queryWhere"/>
    <if test="paging == true">
      limit #{limit} offset #{start}
    </if>

  </select>

  <select id="queryCount" resultType="int" parameterType="com.lyqc.base.page.PageForm">
    select
    COUNT(1)
    from pd_fund_rule_census r
    <include refid="queryWhere"/>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pd_fund_rule_census
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pd_fund_rule_census
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mljr.heil.entity.fund.PdFundRuleCensus" useGeneratedKeys="true" keyProperty="id">
    insert into pd_fund_rule_census (id, fund_rule_id, province_code, 
      province_name, city_code, city_name
      )
    values (#{id,jdbcType=INTEGER}, #{fundRuleId,jdbcType=INTEGER}, #{provinceCode,jdbcType=VARCHAR}, 
      #{provinceName,jdbcType=VARCHAR}, #{cityCode,jdbcType=VARCHAR}, #{cityName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mljr.heil.entity.fund.PdFundRuleCensus" useGeneratedKeys="true" keyProperty="id">
    insert into pd_fund_rule_census
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fundRuleId != null" >
        fund_rule_id,
      </if>
      <if test="provinceCode != null" >
        province_code,
      </if>
      <if test="provinceName != null" >
        province_name,
      </if>
      <if test="cityCode != null" >
        city_code,
      </if>
      <if test="cityName != null" >
        city_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fundRuleId != null" >
        #{fundRuleId,jdbcType=INTEGER},
      </if>
      <if test="provinceCode != null" >
        #{provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="provinceName != null" >
        #{provinceName,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null" >
        #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="cityName != null" >
        #{cityName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mljr.heil.entity.fund.PdFundRuleCensus" >
    update pd_fund_rule_census
    <set >
      <if test="fundRuleId != null" >
        fund_rule_id = #{fundRuleId,jdbcType=INTEGER},
      </if>
      <if test="provinceCode != null" >
        province_code = #{provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="provinceName != null" >
        province_name = #{provinceName,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null" >
        city_code = #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="cityName != null" >
        city_name = #{cityName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mljr.heil.entity.fund.PdFundRuleCensus" >
    update pd_fund_rule_census
    set fund_rule_id = #{fundRuleId,jdbcType=INTEGER},
      province_code = #{provinceCode,jdbcType=VARCHAR},
      province_name = #{provinceName,jdbcType=VARCHAR},
      city_code = #{cityCode,jdbcType=VARCHAR},
      city_name = #{cityName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="batchInsert" parameterType="java.util.List">
    insert into pd_fund_rule_census (fund_rule_id, province_code, province_name, city_code, city_name) values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.fundRuleId}, #{item.provinceCode},#{item.provinceName},#{item.cityCode},#{item.cityName})
    </foreach>
  </insert>

  <sql id="delWhere">
    <where>
      <if test="fundRuleId != null and fundRuleId !=''">
        and fund_rule_id = #{fundRuleId}
      </if>
    </where>
  </sql>
  <delete id="deleteByForm" parameterType="com.mljr.heil.form.fund.PdFundRuleCensusForm" >
    delete from pd_fund_rule_census
    <include refid="delWhere"/>
  </delete>
</mapper>