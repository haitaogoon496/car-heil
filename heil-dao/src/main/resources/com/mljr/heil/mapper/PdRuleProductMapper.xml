<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mljr.heil.mapper.PdRuleProductMapper" >
  <resultMap id="BaseResultMap" type="com.mljr.heil.entity.PdRuleProduct" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="classify" property="classify" jdbcType="TINYINT" />
    <result column="rule_id" property="ruleId" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, classify, rule_id, product_id, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pd_rule_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pd_rule_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mljr.heil.entity.PdRuleProduct" >
    insert into pd_rule_product (id, classify, rule_id, 
      product_id, update_time)
    values (#{id,jdbcType=INTEGER}, #{classify,jdbcType=TINYINT}, #{ruleId,jdbcType=INTEGER}, 
      #{productId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mljr.heil.entity.PdRuleProduct" >
    insert into pd_rule_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="classify != null" >
        classify,
      </if>
      <if test="ruleId != null" >
        rule_id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="classify != null" >
        #{classify,jdbcType=TINYINT},
      </if>
      <if test="ruleId != null" >
        #{ruleId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mljr.heil.entity.PdRuleProduct" >
    update pd_rule_product
    <set >
      <if test="classify != null" >
        classify = #{classify,jdbcType=TINYINT},
      </if>
      <if test="ruleId != null" >
        rule_id = #{ruleId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mljr.heil.entity.PdRuleProduct" >
    update pd_rule_product
    set classify = #{classify,jdbcType=TINYINT},
      rule_id = #{ruleId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <sql id="where">
    <where>
      <if test="form != null ">
        <if test="form.ruleSeq != null and form.ruleSeq != ''">
          and a.rule_seq = #{form.ruleSeq}
        </if>
        <if test="form.name != null and form.name != ''">
          and a.RULE_SEQ_NAME like CONCAT('%',#{form.name},'%')
        </if>
        <if test="form.tag != null and form.tag !=''">
          and EXISTS ( SELECT 1 FROM pd_tags b WHERE b.source_id = a.RULE_SEQ AND b.buz_type = #{form.classify} AND FIND_IN_SET(#{form.tag},b.tags))
        </if>
        <if test="form.tagList != null and form.tagList.size > 0">
          AND EXISTS ( SELECT 1 FROM pd_tags b WHERE b.source_id = a.RULE_SEQ AND b.buz_type = #{form.classify}
          <foreach collection="form.tagList" item="item" index="index">
            AND FIND_IN_SET(#{item},b.tags)
            <if test="index == form.tagList.size()-1">
              )
            </if>
          </foreach>
        </if>
        <if test="form.isOld != null and form.isOld !=''">
          AND (
          CASE
          WHEN (isnull(a.IS_OLD)OR (a.IS_OLD = ''))
          THEN
          FIND_IN_SET( #{form.isOld}, '0,1')
          ELSE
          FIND_IN_SET( #{form.isOld}, a.IS_OLD)
          END
          )
        </if>
        <if test="form.isLcv != null and form.isLcv !=''">
          AND (
          CASE
          WHEN (isnull(a.IS_LCV) OR (a.IS_LCV = ''))
          THEN
          FIND_IN_SET( #{form.isLcv}, '0,1,2,3')
          ELSE
          FIND_IN_SET( #{form.isLcv}, a.IS_LCV)
          END
          )
        </if>
        <if test="form.loanPeriod != null and form.loanPeriod !=''">
          AND (
          CASE
          WHEN (isnull(a.R_LOAN_PERIODS)OR (a.R_LOAN_PERIODS = ''))
          THEN
          FIND_IN_SET(#{form.loanPeriod}, '6,12,18,24,30,36,42,48')
          ELSE
          FIND_IN_SET(#{form.loanPeriod}, a.R_LOAN_PERIODS)
          END
          )
        </if>
        <if test="form.rateLevel != null and form.rateLevel !=''">
          and a.RATE_LEVEL = #{form.rateLevel}
        </if>
        <if test="form.loanRate != null">
          and a.LOAN_RATE = #{form.loanRate}
        </if>

        <if test="form.level != null">
          and a.LEVEL = #{form.level}
        </if>
        <if test="form.gpsFee != null">
          and a.GPS_FEE = #{form.gpsFee}
        </if>
        <if test="form.rebate != null">
          and a.REBATE = #{form.rebate}
        </if>
        <if test="form.gpsPro != null">
          and a.GPS_PRO = #{form.gpsPro}
        </if>
        <if test="form.tcFee != null">
          AND EXISTS ( SELECT 1 FROM ca_yan_bao_tc c WHERE c.RULE_SEQ = a.RULE_SEQ AND c.TC_FEE = #{form.tcFee} )
        </if>

        <if test="form.productId != null and form.productId != '' and form.classify != 1 and form.bindFlag == true">
          AND EXISTS (
          SELECT
          1
          FROM
          pd_rule_product b
          WHERE
          b.rule_id = a.RULE_SEQ
          AND b.classify=#{form.classify}
          AND  b.product_id = #{form.productId}
          )
        </if>
        <if test="form.productId != null and form.productId != '' and form.classify != 1  and form.bindFlag == false">
          AND NOT EXISTS (
          SELECT
          1
          FROM
          pd_rule_product b
          WHERE
          b.rule_id = a.RULE_SEQ
          AND b.classify=#{form.classify}
          AND  b.product_id = #{form.productId}
          )
        </if>
        <if test="form.yanBaoClassify != null and form.yanBaoClassify != ''">
          AND a.classify = #{form.yanBaoClassify}
        </if>
        <if test="form.status != null">
          AND a.STATUS = #{form.status}
        </if>
      </if>
    </where>
  </sql>
  
  <sql id="serFinWhere">
      <where>
        <if test="form != null ">
          <if test="form.productId != null and form.productId != '' and form.bindFlag == true">
            AND EXISTS (
            SELECT
            1
            FROM
            pd_rule_product b
            WHERE
            b.rule_id = a.RULE_SEQ
            AND b.classify=#{form.classify}
            AND  b.product_id = #{form.productId}
            )
          </if>
          <if test="form.productId != null and form.productId != '' and form.bindFlag == false">
            AND NOT EXISTS (
            SELECT
            1
            FROM
            pd_rule_product b
            WHERE
            b.rule_id = a.RULE_SEQ
            AND b.classify=#{form.classify}
            AND  b.product_id = #{form.productId}
            )
          </if>
          <if test="(form.serFinRate != null) || (form.serFinRebateRate != null)">
              AND EXISTS ( SELECT 1 FROM ca_ser_fin_rate f WHERE f.RULE_SEQ = a.RULE_SEQ
              <if test="form.serFinRate != null">
                  and f.SER_FIN_RATE = #{form.serFinRate}
              </if>
              <if test="form.serFinRebateRate != null">
                  and f.SER_FIN_REBATE_RATE = #{form.serFinRebateRate}
              </if>
              )
          </if>

          <if test="form.ruleSeq != null and form.ruleSeq != ''">
              and a.rule_seq = #{form.ruleSeq}
          </if>
          <if test="form.name != null and form.name != ''">
              and a.RULE_SEQ_NAME like CONCAT('%',#{form.name},'%')
          </if>
          <if test="form.tag != null and form.tag !=''">
              and EXISTS ( SELECT 1 FROM pd_tags b WHERE b.source_id = a.RULE_SEQ AND b.buz_type = #{form.classify} AND FIND_IN_SET(#{form.tag},b.tags))
          </if>
          <if test="form.tagList != null and form.tagList.size > 0">
            AND EXISTS ( SELECT 1 FROM pd_tags b WHERE b.source_id = a.RULE_SEQ AND b.buz_type = #{form.classify}
            <foreach collection="form.tagList" item="item" index="index">
              AND FIND_IN_SET(#{item},b.tags)
              <if test="index == form.tagList.size()-1">
                )
              </if>
            </foreach>
          </if>
          <if test="form.isOld != null and form.isOld !=''">
              AND (
              CASE
              WHEN (isnull(a.IS_OLD)OR (a.IS_OLD = ''))
              THEN
              FIND_IN_SET( #{form.isOld}, '0,1')
              ELSE
              FIND_IN_SET( #{form.isOld}, a.IS_OLD)
              END
              )
          </if>
          <if test="form.isLcv != null and form.isLcv !=''">
              AND (
              CASE
              WHEN (isnull(a.IS_LCV) OR (a.IS_LCV = ''))
              THEN
              FIND_IN_SET( #{form.isLcv}, '0,1,2,3')
              ELSE
              FIND_IN_SET( #{form.isLcv}, a.IS_LCV)
              END
              )
          </if>
          <if test="form.loanPeriod != null and form.loanPeriod !=''">
              AND (
              CASE
              WHEN (isnull(a.R_LOAN_PERIODS)OR (a.R_LOAN_PERIODS = ''))
              THEN
              FIND_IN_SET(#{form.loanPeriod}, '6,12,18,24,30,36,42,48')
              ELSE
              FIND_IN_SET(#{form.loanPeriod}, a.R_LOAN_PERIODS)
              END
              )
          </if>
          <if test="form.status != null">
            AND a.STATUS = #{form.status}
          </if>
        </if>
      </where>
  </sql>


  <resultMap id="serFinRulesMap" type="com.mljr.heil.entity.SerFinRule" >
    <id column="RULE_SEQ" property="ruleSeq" jdbcType="INTEGER" />
    <result column="RULE_SEQ_NAME" property="ruleSeqName" jdbcType="VARCHAR" />
    <result column="IS_OLD" property="isOld" jdbcType="CHAR" />
    <result column="IS_LCV" property="isLcv" jdbcType="VARCHAR" />
    <result column="LOAN_AMOUNT_MIIN" property="loanAmountMiin" jdbcType="DECIMAL" />
    <result column="LOAN_AMOUNT_MAX" property="loanAmountMax" jdbcType="DECIMAL" />
    <result column="INIT_SCALE_MIN" property="initScaleMin" jdbcType="DECIMAL" />
    <result column="INIT_SCALE_MAX" property="initScaleMax" jdbcType="DECIMAL" />
    <result column="R_LOAN_PERIODS" property="rLoanPeriods" jdbcType="VARCHAR" />
    <result column="IS_ALL_DEALER" property="isAllDealer" jdbcType="CHAR" />
    <result column="SER_FIN_FEE" property="serFinFee" jdbcType="DECIMAL" />
    <result column="BEGIN_DATE" property="beginDate" jdbcType="DATE" />
    <result column="END_DATE" property="endDate" jdbcType="DATE" />
    <result column="PRO_SEQ" property="proSeq" jdbcType="TINYINT" />
    <result column="VAR" property="var" jdbcType="TINYINT" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
    <result column="RULE1" property="rule1" jdbcType="VARCHAR" />
    <result column="RULE2" property="rule2" jdbcType="VARCHAR" />
    <result column="RULE3" property="rule3" jdbcType="VARCHAR" />
    <result column="RULE4" property="rule4" jdbcType="VARCHAR" />
    <result column="work_flow" property="workFlow" jdbcType="VARCHAR" />
    <result column="taken_mode" property="takenMode" jdbcType="TINYINT" />
    <result column="STATUS" property="status" jdbcType="TINYINT" />
  </resultMap>

  <select id="querySerFinRules" resultMap="serFinRulesMap" parameterType="com.lyqc.base.page.PageForm">
    SELECT
    a.*
    FROM
    ca_ser_fin_rule a
    <include refid="serFinWhere"/>
    <if test="paging == true">
      limit #{limit} offset #{start}
    </if>

  </select>
  <select id="querySerFinRulesCount" resultType="int" parameterType="com.lyqc.base.page.PageForm">
    select
    COUNT(1)
    FROM
    ca_ser_fin_rule a
    <include refid="serFinWhere"/>
  </select>

  <resultMap id="rateResultMap" type="com.mljr.heil.entity.RateRule" >
    <id column="RULE_SEQ" property="ruleSeq" jdbcType="INTEGER" />
    <result column="RULE_SEQ_NAME" property="ruleSeqName" jdbcType="VARCHAR" />
    <result column="IS_OLD" property="isOld" jdbcType="CHAR" />
    <result column="IS_LCV" property="isLcv" jdbcType="VARCHAR" />
    <result column="LOAN_AMOUNT_MIIN" property="loanAmountMiin" jdbcType="DECIMAL" />
    <result column="LOAN_AMOUNT_MAX" property="loanAmountMax" jdbcType="DECIMAL" />
    <result column="INIT_SCALE_MIN" property="initScaleMin" jdbcType="DECIMAL" />
    <result column="INIT_SCALE_MAX" property="initScaleMax" jdbcType="DECIMAL" />
    <result column="R_LOAN_PERIODS" property="rLoanPeriods" jdbcType="VARCHAR" />
    <result column="IS_ALL_DEALER" property="isAllDealer" jdbcType="CHAR" />
    <result column="LOAN_RATE" property="loanRate" jdbcType="DECIMAL" />
    <result column="BEGIN_DATE" property="beginDate" jdbcType="DATE" />
    <result column="END_DATE" property="endDate" jdbcType="DATE" />
    <result column="PRO_SEQ" property="proSeq" jdbcType="TINYINT" />
    <result column="VAR" property="var" jdbcType="TINYINT" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
    <result column="RULE4" property="rule4" jdbcType="VARCHAR" />
    <result column="RULE1" property="rule1" jdbcType="VARCHAR" />
    <result column="RULE2" property="rule2" jdbcType="VARCHAR" />
    <result column="RULE3" property="rule3" jdbcType="VARCHAR" />
    <result column="rate_level" property="rateLevel" jdbcType="VARCHAR" />
    <result column="high_rate" property="highRate" jdbcType="DECIMAL" />
    <result column="extend_props" property="extendProps" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="TINYINT" />
  </resultMap>

  <select id="queryRateRules" resultMap="rateResultMap" parameterType="com.lyqc.base.page.PageForm">
    SELECT
    a.*
    FROM
    ca_rate_rule a

    <include refid="where"/>
    <if test="paging == true">
      limit #{limit} offset #{start}
    </if>

  </select>


  <select id="queryRateRulesCount" resultType="int" parameterType="com.lyqc.base.page.PageForm">
    select
    COUNT(1)
    FROM
    ca_rate_rule a

    <include refid="where"/>
  </select>


  <resultMap id="gpsResultMap" type="com.mljr.heil.entity.GpsRule" >
    <id column="RULE_SEQ" property="ruleSeq" jdbcType="INTEGER" />
    <result column="RULE_SEQ_NAME" property="ruleSeqName" jdbcType="VARCHAR" />
    <result column="IS_OLD" property="isOld" jdbcType="CHAR" />
    <result column="IS_LCV" property="isLcv" jdbcType="VARCHAR" />
    <result column="LOAN_AMOUNT_MIIN" property="loanAmountMiin" jdbcType="DECIMAL" />
    <result column="LOAN_AMOUNT_MAX" property="loanAmountMax" jdbcType="DECIMAL" />
    <result column="INIT_SCALE_MIN" property="initScaleMin" jdbcType="DECIMAL" />
    <result column="INIT_SCALE_MAX" property="initScaleMax" jdbcType="DECIMAL" />
    <result column="R_LOAN_PERIODS" property="rLoanPeriods" jdbcType="VARCHAR" />
    <result column="IS_ALL_DEALER" property="isAllDealer" jdbcType="CHAR" />
    <result column="GPS_FEE" property="gpsFee" jdbcType="DECIMAL" />
    <result column="BEGIN_DATE" property="beginDate" jdbcType="DATE" />
    <result column="END_DATE" property="endDate" jdbcType="DATE" />
    <result column="PRO_SEQ" property="proSeq" jdbcType="TINYINT" />
    <result column="VAR" property="var" jdbcType="TINYINT" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
    <result column="RULE1" property="rule1" jdbcType="VARCHAR" />
    <result column="RULE2" property="rule2" jdbcType="VARCHAR" />
    <result column="RULE3" property="rule3" jdbcType="VARCHAR" />
    <result column="RULE4" property="rule4" jdbcType="VARCHAR" />
    <result column="LEVEL" property="level" jdbcType="VARCHAR" />
    <result column="REBATE" property="rebate" jdbcType="DECIMAL" />
    <result column="GPS_COUNT" property="gpsCount" jdbcType="INTEGER" />
    <result column="GPS_PRO" property="gpsPro" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="TINYINT" />
  </resultMap>

  <select id="queryGpsRules" resultMap="gpsResultMap" parameterType="com.lyqc.base.page.PageForm">
    SELECT
    a.*
    FROM
    ca_gps_rule a
    <include refid="where"/>
    <if test="paging == true">
      limit #{limit} offset #{start}
    </if>

  </select>

  <select id="queryGpsRulesCount" resultType="int" parameterType="com.lyqc.base.page.PageForm">
    select
    COUNT(1)
    FROM
    ca_gps_rule a

    <include refid="where"/>
  </select>


  <resultMap id="yanBaoRuleMap" type="com.mljr.heil.entity.YanbaoRule" >
    <id column="RULE_SEQ" property="ruleSeq" jdbcType="INTEGER" />
    <result column="classify" property="classify" jdbcType="TINYINT" />
    <result column="RULE_SEQ_NAME" property="ruleSeqName" jdbcType="VARCHAR" />
    <result column="IS_OLD" property="isOld" jdbcType="CHAR" />
    <result column="IS_LCV" property="isLcv" jdbcType="VARCHAR" />
    <result column="LOAN_AMOUNT_MIIN" property="loanAmountMiin" jdbcType="DECIMAL" />
    <result column="LOAN_AMOUNT_MAX" property="loanAmountMax" jdbcType="DECIMAL" />
    <result column="INIT_SCALE_MIN" property="initScaleMin" jdbcType="DECIMAL" />
    <result column="INIT_SCALE_MAX" property="initScaleMax" jdbcType="DECIMAL" />
    <result column="R_LOAN_PERIODS" property="rLoanPeriods" jdbcType="VARCHAR" />
    <result column="IS_ALL_DEALER" property="isAllDealer" jdbcType="CHAR" />
    <result column="BEGIN_DATE" property="beginDate" jdbcType="DATE" />
    <result column="END_DATE" property="endDate" jdbcType="DATE" />
    <result column="PRO_SEQ" property="proSeq" jdbcType="TINYINT" />
    <result column="VAR" property="var" jdbcType="TINYINT" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
    <result column="RULE1" property="rule1" jdbcType="VARCHAR" />
    <result column="RULE2" property="rule2" jdbcType="VARCHAR" />
    <result column="RULE3" property="rule3" jdbcType="VARCHAR" />
    <result column="RULE4" property="rule4" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="TINYINT" />
  </resultMap>
  <select id="queryYanbaoRules" resultMap="yanBaoRuleMap" parameterType="com.lyqc.base.page.PageForm">
    SELECT
    a.*
    FROM
    ca_yan_bao_rule a

    <include refid="where"/>
    <if test="paging == true">
      limit #{limit} offset #{start}
    </if>

  </select>

  <select id="queryYanbaoRulesCount" resultType="int" parameterType="com.lyqc.base.page.PageForm">
    select
    COUNT(1)
    FROM
    ca_yan_bao_rule a

    <include refid="where"/>
  </select>


  <resultMap id="accountRuleMap" type="com.mljr.heil.entity.AccountRule" >
    <id column="RULE_SEQ" property="ruleSeq" jdbcType="INTEGER" />
    <result column="RULE_SEQ_NAME" property="ruleSeqName" jdbcType="VARCHAR" />
    <result column="IS_OLD" property="isOld" jdbcType="CHAR" />
    <result column="IS_LCV" property="isLcv" jdbcType="VARCHAR" />
    <result column="LOAN_AMOUNT_MIIN" property="loanAmountMiin" jdbcType="DECIMAL" />
    <result column="LOAN_AMOUNT_MAX" property="loanAmountMax" jdbcType="DECIMAL" />
    <result column="INIT_SCALE_MIN" property="initScaleMin" jdbcType="DECIMAL" />
    <result column="INIT_SCALE_MAX" property="initScaleMax" jdbcType="DECIMAL" />
    <result column="R_LOAN_PERIODS" property="rLoanPeriods" jdbcType="VARCHAR" />
    <result column="IS_ALL_DEALER" property="isAllDealer" jdbcType="CHAR" />
    <result column="TOP_LIMIT_FEE" property="topLimitFee" jdbcType="DECIMAL" />
    <result column="BEGIN_DATE" property="beginDate" jdbcType="DATE" />
    <result column="END_DATE" property="endDate" jdbcType="DATE" />
    <result column="PRO_SEQ" property="proSeq" jdbcType="TINYINT" />
    <result column="VAR" property="var" jdbcType="TINYINT" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
    <result column="RULE1" property="rule1" jdbcType="VARCHAR" />
    <result column="RULE2" property="rule2" jdbcType="VARCHAR" />
    <result column="RULE3" property="rule3" jdbcType="VARCHAR" />
    <result column="RULE4" property="rule4" jdbcType="VARCHAR" />
    <result column="TOP_LIMIT_SCALE" property="topLimitScale" jdbcType="DOUBLE" />
    <result column="STATUS" property="status" jdbcType="TINYINT" />
  </resultMap>
  <select id="queryAccountRules" resultMap="accountRuleMap" parameterType="com.lyqc.base.page.PageForm">
    SELECT
    a.*
    FROM
    ca_account_rule a

    <include refid="where"/>
    <if test="paging == true">
      limit #{limit} offset #{start}
    </if>

  </select>

  <select id="queryAccountRulesCount" resultType="int" parameterType="com.lyqc.base.page.PageForm">
    select
    COUNT(1)
    FROM
    ca_account_rule a

    <include refid="where"/>
  </select>


  <insert id="batchInsert" parameterType="java.util.List" >
    insert ignore into pd_rule_product ( classify, rule_id, product_id) values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.classify}, #{item.ruleId},#{item.productId})
    </foreach>
  </insert>

  <insert id="batchInsertIgnore" parameterType="java.util.List" >
    insert ignore into pd_rule_product ( classify, rule_id, product_id) values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.classify}, #{item.ruleId},#{item.productId})
    </foreach>
  </insert>

  <delete id="deleteByForm" parameterType="com.mljr.heil.form.PdRuleProductForm" >
    delete from pd_rule_product
    <include refid="delWhere"/>
  </delete>

  <delete id="batchDelete" parameterType="java.util.List">
    delete from pd_rule_product
    where
    classify in
    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
      #{item.classify}
    </foreach>
    and product_id in
    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
      #{item.productId}
    </foreach>
    and rule_id in
    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
      #{item.ruleId}
    </foreach>
  </delete>

  <sql id="delWhere">
    <where>
      <if test="productId != null">
        and product_id=#{productId}
      </if>
      <if test="classify != null">
        and classify=#{classify}
      </if>
      <if test="ruleIdList != null">
        and rule_id in
        <foreach collection="ruleIdList" item="item" index="index" open="(" close=")" separator=",">
          #{item}
        </foreach>
      </if>
    </where>
  </sql>

  <!-- 查询规则产品关系列表 -->
  <select id="queryRuleProductListByParam" resultType="com.mljr.heil.base.entity.BaseDealerRes" parameterType="com.mljr.heil.base.form.RuleRefForm">
    SELECT a.${masterRefKey} as ruleSeq, b.product_id as pId FROM ${masterTable} a
    INNER JOIN ${slaveTable} b ON a.${masterRefKey} = b.${slaveRefKey}
    WHERE a.status = 1
    <if test="classify != null">
      AND b.classify = #{classify}
    </if>
  </select>
</mapper>